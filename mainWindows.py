# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'MainWindows.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *
from Isimm import Isimm
from Etudiant import Etudiant
from Matiere import Matiere
from Notes import Notes

from ajoutEtudiant import Ui_Dialog as addEtu

from suppInsc import Ui_Dialog as supIns
from suppSec import Ui_Dialog as supSec
from suppNiv import Ui_Dialog as supNiv
from suppSecNiv import Ui_Dialog as supSecNiv

from mdfAdr import Ui_Dialog as mdfAdr
from mdfTel import Ui_Dialog as mdfTel
from mdfMail import Ui_Dialog as mdfMail

from affEtud import Ui_Dialog as affEtud
from rechIns import Ui_Dialog as rechIns
from rechSec import Ui_Dialog as rechSec
from rechNiv import Ui_Dialog as rechNiv
from rechSecNiv import Ui_Dialog as rechSecNiv


from ajoutMat import Ui_Dialog as addMat
from suppMat import Ui_Dialog as suppMat
from mdfNom import Ui_Dialog as mdfNom
from mdfCoef import Ui_Dialog as mdfCoef
from affMat import Ui_Dialog as affMat
from rechCode import Ui_Dialog as rechCode
from rechSecMat import Ui_Dialog as rechSecMat
from rechSecSem import Ui_Dialog as rechSecSem

from ajoutNote import Ui_Dialog as addNote
from suppNote import Ui_Dialog as suppNote
from mdfNote import Ui_Dialog as mdfNote
from affNote import Ui_Dialog as affNote
from rechInsNote import Ui_Dialog as rechInsNote
from rechSecNivNote import Ui_Dialog as rechSecNivNote
from rechInsSem import Ui_Dialog as rechInsSem

from Bulletin import Ui_Dialog as bul
from BulletinSem import Ui_Dialog as bulSem
from admisSec import Ui_Dialog as admSec
from redouSec import Ui_Dialog as redSec
from admisIsimm import Ui_Dialog as admIsimm
from redouIsimm import Ui_Dialog as redIsimm
from moySec import Ui_Dialog as moySec



class Ui_MainWindow(object):
    def __init__(self,Isimm):
        self.inst=Isimm
        
    
    
    
    def ajouteEtudiant(self):
        self.window_ajouter=QDialog()
        self.ui=addEtu(self.inst)
        self.ui.setupUi(self.window_ajouter)
        self.window_ajouter.show()
        
    def supprimIns(self):
        self.window_suppIns=QDialog()
        self.ui=supIns(self.inst)
        self.ui.setupUi(self.window_suppIns)
        self.window_suppIns.show()
        
    def supprimSec(self):
        self.window_suppSec=QDialog()
        self.ui=supSec(self.inst)
        self.ui.setupUi(self.window_suppSec)
        self.window_suppSec.show()
    
    def supprimNiv(self):
        self.window_suppNiv=QDialog()
        self.ui=supNiv(self.inst)
        self.ui.setupUi(self.window_suppNiv)
        self.window_suppNiv.show()
    
    def supprimSecNiv(self):
        self.window_suppSecNiv=QDialog()
        self.ui=supSecNiv(self.inst)
        self.ui.setupUi(self.window_suppSecNiv)
        self.window_suppSecNiv.show()

    def modifAdr(self):
        self.window_mdfAdr=QDialog()
        self.ui=mdfAdr(self.inst)
        self.ui.setupUi(self.window_mdfAdr)
        self.window_mdfAdr.show()
        
    def modifTel(self):
        self.window_mdfTel=QDialog()
        self.ui=mdfTel(self.inst)
        self.ui.setupUi(self.window_mdfTel)
        self.window_mdfTel.show()
    
    def modifMail(self):
        self.window_mdfMail=QDialog()
        self.ui=mdfMail(self.inst)
        self.ui.setupUi(self.window_mdfMail)
        self.window_mdfMail.show()
        
    def affEtudiant(self):
        self.window_affEtud=QDialog()
        self.ui=affEtud(self.inst)
        self.ui.setupUi(self.window_affEtud)
        self.window_affEtud.show()
    
    def rechIns(self):
        self.window_rechIns=QDialog()
        self.ui=rechIns(self.inst)
        self.ui.setupUi(self.window_rechIns)
        self.window_rechIns.show()
    def rechSec(self):
        self.window_rechSec=QDialog()
        self.ui=rechSec(self.inst)
        self.ui.setupUi(self.window_rechSec)
        self.window_rechSec.show()
    def rechSecNiv(self):
        self.window_rechSecNiv=QDialog()
        self.ui=rechSecNiv(self.inst)
        self.ui.setupUi(self.window_rechSecNiv)
        self.window_rechSecNiv.show()
    def rechNiv(self):
        self.window_rechNiv=QDialog()
        self.ui=rechNiv(self.inst)
        self.ui.setupUi(self.window_rechNiv)
        self.window_rechNiv.show()
    
    def parseStudent(self,line):
        lis=line.split(",")
        lis[8]=lis[8].replace("\n","")
        return Etudiant(lis[0],lis[1],lis[2],lis[3],lis[4],lis[5],lis[6],lis[7],lis[8])   

    def enregistrerEtudiant(self):
        F=open("./Save/saveEtudiant.csv","w+")
        F.seek(0)
        F.write("Numero d'inscription,Nom,Prenom,Date de naissance,Adresse,Mail,Telephone,Section,Niveau d'etude\n")
        for i in self.inst.listEtudiant:
            F.write(i.num+","+i.nom+","+i.prenom+","+i.date+","+i.adresse+","+i.mail+","+i.tel+","+i.section+","+i.niv+"\n")
                
        F.close()
    def recupererEtudiant(self):
        self.inst.listEtudiant.clear()
        F=open("./save/SaveEtudiant.csv","r")
        count=-1
        for line in F:
            count+=1
            if(count==0):
                continue
            self.inst.listEtudiant.append(self.parseStudent(line))
            
        F.close()
        
    
    def ajouteMatiere(self):
        self.window_addMat=QDialog()
        self.ui=addMat(self.inst)
        self.ui.setupUi(self.window_addMat)
        self.window_addMat.show()
    
    def supprMatiere(self):
        self.window_suppMat=QDialog()
        self.ui=suppMat(self.inst)
        self.ui.setupUi(self.window_suppMat)
        self.window_suppMat.show()
        
    def modifNom(self):
        self.window_modNom=QDialog()
        self.ui=mdfNom(self.inst)
        self.ui.setupUi(self.window_modNom)
        self.window_modNom.show()
        
    def modifCoef(self):
        self.window_modCoef=QDialog()
        self.ui=mdfCoef(self.inst)
        self.ui.setupUi(self.window_modCoef)
        self.window_modCoef.show()
        
    def affMatiere(self):
        self.window_affMat=QDialog()
        self.ui=affMat(self.inst)
        self.ui.setupUi(self.window_affMat)
        self.window_affMat.show()
        
    def rechCode(self):
        self.window_rechCode=QDialog()
        self.ui=rechCode(self.inst)
        self.ui.setupUi(self.window_rechCode)
        self.window_rechCode.show()
    def rechSecMat(self):
        self.window_rechSecMat=QDialog()
        self.ui=rechSecMat(self.inst)
        self.ui.setupUi(self.window_rechSecMat)
        self.window_rechSecMat.show()
    def rechSecSem(self):
        self.window_rechSecSem=QDialog()
        self.ui=rechSecSem(self.inst)
        self.ui.setupUi(self.window_rechSecSem)
        self.window_rechSecSem.show()
        
    def parseMatiere(self,line):
        lis=line.split(",")
        lis[4]=lis[4].replace("\n","")
        return Matiere(lis[0],lis[1],lis[2],lis[3],lis[4])   

    def enregistrerMatiere(self):
        F=open("./Save/saveMatiere.csv","w+")
        F.seek(0)
        F.write("Code,Nom,Section,Coefficient,Semestre\n")
        for i in self.inst.listMatiere:
            F.write(i.code+","+i.desi+","+i.section+","+i.coef+","+i.sem+"\n")
                
        F.close()
    def recupererMatiere(self):
        self.inst.listMatiere.clear()
        F=open("./Save/saveMatiere.csv","r")
        count=-1
        for line in F:
            count+=1
            if(count==0):
                continue
            self.inst.listMatiere.append(self.parseMatiere(line))
            
        F.close()
        
    
    
    def ajoutNote(self):
        self.window_addNote=QDialog()
        self.ui=addNote(self.inst)
        self.ui.setupUi(self.window_addNote)
        self.window_addNote.show()
    def suppNote(self):
        self.window_suppNote=QDialog()
        self.ui=suppNote(self.inst)
        self.ui.setupUi(self.window_suppNote)
        self.window_suppNote.show()
    def mdfNote(self):
        self.window_mdfNote=QDialog()
        self.ui=mdfNote(self.inst)
        self.ui.setupUi(self.window_mdfNote)
        self.window_mdfNote.show()
    def affNote(self):
        self.window_affNote=QDialog()
        self.ui=affNote(self.inst)
        self.ui.setupUi(self.window_affNote)
        self.window_affNote.show()
    def rechInsNote(self):
        self.window_rechInsNote=QDialog()
        self.ui=rechInsNote(self.inst)
        self.ui.setupUi(self.window_rechInsNote)
        self.window_rechInsNote.show()
    def rechSecNivNote(self):
        self.window_rechSecNivNote=QDialog()
        self.ui=rechSecNivNote(self.inst)
        self.ui.setupUi(self.window_rechSecNivNote)
        self.window_rechSecNivNote.show()
    def rechInsSem(self):
        self.window_rechInsSem=QDialog()
        self.ui=rechInsSem(self.inst)
        self.ui.setupUi(self.window_rechInsSem)
        self.window_rechInsSem.show()
    
    
    
    def parseNote(self,line):
        lis=line.split(",")
        lis[3]=lis[3].replace("\n","")
        return Notes(lis[0],lis[1],lis[2],lis[3])   

    def enregistrerNote(self):
        F=open("./Save/saveNote.csv","w+")
        F.seek(0)
        F.write("Numero d'inscription,Code,DS,EX\n")
        for i in self.inst.listNote:
            F.write(i.num+","+i.code+","+i.ds+","+i.ex+"\n")
                
        F.close()
        
    def recupererNote(self):
        self.inst.listNote.clear()
        F=open("./Save/saveNote.csv","r")
        count=-1
        for line in F:
            count+=1
            if(count==0):
                continue
            self.inst.listNote.append(self.parseNote(line))
            
        F.close()
    
    
    def affBul(self):
        self.window_bul=QDialog()
        self.ui=bul(self.inst)
        self.ui.setupUi(self.window_bul)
        self.window_bul.show()
        
    def affBulSem(self):
        self.window_bulSem=QDialog()
        self.ui=bulSem(self.inst)
        self.ui.setupUi(self.window_bulSem)
        self.window_bulSem.show()
        
    def admSec(self):
        self.window_admSec=QDialog()
        self.ui=admSec(self.inst)
        self.ui.setupUi(self.window_admSec)
        self.window_admSec.show()
    
    def redSec(self):
        self.window_redSec=QDialog()
        self.ui=redSec(self.inst)
        self.ui.setupUi(self.window_redSec)
        self.window_redSec.show()
        
    def admIsimm(self):
        self.window_admIsimm=QDialog()
        self.ui=admIsimm(self.inst)
        self.ui.setupUi(self.window_admIsimm)
        self.window_admIsimm.show()
    
    def redIsimm(self):
        self.window_redIsimm=QDialog()
        self.ui=redIsimm(self.inst)
        self.ui.setupUi(self.window_redIsimm)
        self.window_redIsimm.show()
    
    def moySec(self):
        self.window_moySec=QDialog()
        self.ui=moySec(self.inst)
        self.ui.setupUi(self.window_moySec)
        self.window_moySec.show()
    
    def recupererTout(self):
        self.recupererEtudiant()
        self.recupererMatiere()
        self.recupererNote()
        
    def enregistrerTout(self):
        self.enregistrerEtudiant()
        self.enregistrerMatiere()
        self.enregistrerNote()


    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1120, 600)
        icon = QtGui.QIcon.fromTheme("C:\\Users\\yessi\\Desktop\\python\\Project\\window_icon.png")
        MainWindow.setWindowIcon(icon)
        MainWindow.setAutoFillBackground(False)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setGeometry(QtCore.QRect(0, 0, 1121, 631))
        self.widget.setObjectName("widget")
        self.label = QtWidgets.QLabel(self.widget)
        self.label.setGeometry(QtCore.QRect(0, -20, 1120, 600))
        self.label.setStyleSheet("border-image:url(:/img/Background.jpg)")
        self.label.setText("")
        self.label.setObjectName("label")
        
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1123, 26))
        self.menubar.setObjectName("menubar")
        self.menuGestion_des_etudiants = QtWidgets.QMenu(self.menubar)
        self.menuGestion_des_etudiants.setObjectName("menuGestion_des_etudiants")
        self.menuMise_a_jour_des_etudiants = QtWidgets.QMenu(self.menuGestion_des_etudiants)
        self.menuMise_a_jour_des_etudiants.setObjectName("menuMise_a_jour_des_etudiants")
        self.menuSupprimer_etudiant = QtWidgets.QMenu(self.menuMise_a_jour_des_etudiants)
        self.menuSupprimer_etudiant.setObjectName("menuSupprimer_etudiant")
        self.menuModifier_etudiant = QtWidgets.QMenu(self.menuMise_a_jour_des_etudiants)
        self.menuModifier_etudiant.setObjectName("menuModifier_etudiant")
        self.menuRecherche_et_Affichage = QtWidgets.QMenu(self.menuGestion_des_etudiants)
        self.menuRecherche_et_Affichage.setObjectName("menuRecherche_et_Affichage")
        self.menuGestion_des_mati_res = QtWidgets.QMenu(self.menubar)
        self.menuGestion_des_mati_res.setObjectName("menuGestion_des_mati_res")
        self.menuMise_jour = QtWidgets.QMenu(self.menuGestion_des_mati_res)
        self.menuMise_jour.setObjectName("menuMise_jour")
        self.menuModifier_une_mati_re = QtWidgets.QMenu(self.menuMise_jour)
        self.menuModifier_une_mati_re.setObjectName("menuModifier_une_mati_re")
        self.menuRecherche_et_Affichage_2 = QtWidgets.QMenu(self.menuGestion_des_mati_res)
        self.menuRecherche_et_Affichage_2.setObjectName("menuRecherche_et_Affichage_2")
        self.menuGestion_des_notes = QtWidgets.QMenu(self.menubar)
        self.menuGestion_des_notes.setObjectName("menuGestion_des_notes")
        self.menuMise_jour_2 = QtWidgets.QMenu(self.menuGestion_des_notes)
        self.menuMise_jour_2.setObjectName("menuMise_jour_2")
        self.menuRecherche_et_Affichage_3 = QtWidgets.QMenu(self.menuGestion_des_notes)
        self.menuRecherche_et_Affichage_3.setObjectName("menuRecherche_et_Affichage_3")
        self.menuCalcul_et_Affichage = QtWidgets.QMenu(self.menubar)
        self.menuCalcul_et_Affichage.setObjectName("menuCalcul_et_Affichage")
        self.menuEnregisrement_et_R_cup_ration_des_fichiers = QtWidgets.QMenu(self.menubar)
        self.menuEnregisrement_et_R_cup_ration_des_fichiers.setObjectName("menuEnregisrement_et_R_cup_ration_des_fichiers")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionAjouter_etudiant = QtWidgets.QAction(MainWindow)
        self.actionAjouter_etudiant.setObjectName("actionAjouter_etudiant")
        self.actionEtudiant_donne = QtWidgets.QAction(MainWindow)
        self.actionEtudiant_donne.setObjectName("actionEtudiant_donne")
        self.actionD_une_section_donn_e = QtWidgets.QAction(MainWindow)
        self.actionD_une_section_donn_e.setObjectName("actionD_une_section_donn_e")
        self.actionD_un_niveau_donn = QtWidgets.QAction(MainWindow)
        self.actionD_un_niveau_donn.setObjectName("actionD_un_niveau_donn")
        self.actionD_une_section_et_un_niveau = QtWidgets.QAction(MainWindow)
        self.actionD_une_section_et_un_niveau.setObjectName("actionD_une_section_et_un_niveau")
        self.actionT_l_phone = QtWidgets.QAction(MainWindow)
        self.actionT_l_phone.setObjectName("actionT_l_phone")
        self.actionMail = QtWidgets.QAction(MainWindow)
        self.actionMail.setObjectName("actionMail")
        self.actionAdresse = QtWidgets.QAction(MainWindow)
        self.actionAdresse.setObjectName("actionAdresse")
        self.actionContenu_du_dictionnaire_tudiants = QtWidgets.QAction(MainWindow)
        self.actionContenu_du_dictionnaire_tudiants.setObjectName("actionContenu_du_dictionnaire_tudiants")
        self.actionRecherche_par_num_ro = QtWidgets.QAction(MainWindow)
        self.actionRecherche_par_num_ro.setObjectName("actionRecherche_par_num_ro")
        self.actionRecherche_par_section = QtWidgets.QAction(MainWindow)
        self.actionRecherche_par_section.setObjectName("actionRecherche_par_section")
        self.actionRecherche_par_section_et_niveau = QtWidgets.QAction(MainWindow)
        self.actionRecherche_par_section_et_niveau.setObjectName("actionRecherche_par_section_et_niveau")
        self.actionRecherche_par_niveau = QtWidgets.QAction(MainWindow)
        self.actionRecherche_par_niveau.setObjectName("actionRecherche_par_niveau")
        self.actionAjouter_mati_re = QtWidgets.QAction(MainWindow)
        self.actionAjouter_mati_re.setObjectName("actionAjouter_mati_re")
        self.actionSupprimer_un_mati_re = QtWidgets.QAction(MainWindow)
        self.actionSupprimer_un_mati_re.setObjectName("actionSupprimer_un_mati_re")
        self.actionNom = QtWidgets.QAction(MainWindow)
        self.actionNom.setObjectName("actionNom")
        self.actionCoefficient = QtWidgets.QAction(MainWindow)
        self.actionCoefficient.setObjectName("actionCoefficient")
        self.actionContenu_du_dictionnaire_mati_res = QtWidgets.QAction(MainWindow)
        self.actionContenu_du_dictionnaire_mati_res.setObjectName("actionContenu_du_dictionnaire_mati_res")
        self.actionRecherche_par_code = QtWidgets.QAction(MainWindow)
        self.actionRecherche_par_code.setObjectName("actionRecherche_par_code")
        self.actionRecherche_par_section_2 = QtWidgets.QAction(MainWindow)
        self.actionRecherche_par_section_2.setObjectName("actionRecherche_par_section_2")
        self.actionRecherche_par_section_et_semestre = QtWidgets.QAction(MainWindow)
        self.actionRecherche_par_section_et_semestre.setObjectName("actionRecherche_par_section_et_semestre")
        self.actionAjouter_une_note = QtWidgets.QAction(MainWindow)
        self.actionAjouter_une_note.setObjectName("actionAjouter_une_note")
        self.actionSupprimer_une_note = QtWidgets.QAction(MainWindow)
        self.actionSupprimer_une_note.setObjectName("actionSupprimer_une_note")
        self.actionModifier_une_note = QtWidgets.QAction(MainWindow)
        self.actionModifier_une_note.setObjectName("actionModifier_une_note")
        self.actionContenu_du_dictionnaire_notes = QtWidgets.QAction(MainWindow)
        self.actionContenu_du_dictionnaire_notes.setObjectName("actionContenu_du_dictionnaire_notes")
        self.actionRecherche_par_num_ro_inscription = QtWidgets.QAction(MainWindow)
        self.actionRecherche_par_num_ro_inscription.setObjectName("actionRecherche_par_num_ro_inscription")
        self.actionRecherche_par_section_et_niveau_2= QtWidgets.QAction(MainWindow)
        self.actionRecherche_par_section_et_niveau_2.setObjectName("actionRecherche_par_section_et_niveau_2")
        self.actionRecherche_par_num_ro_inscription_et_semestre = QtWidgets.QAction(MainWindow)
        self.actionRecherche_par_num_ro_inscription_et_semestre.setObjectName("actionRecherche_par_num_ro_inscription_et_semestre")
        self.actionBulletin_de_note_d_un_tudiant = QtWidgets.QAction(MainWindow)
        self.actionBulletin_de_note_d_un_tudiant.setObjectName("actionBulletin_de_note_d_un_tudiant")
        self.actionBulletin_de_note_d_un_tudiant_par_semestre = QtWidgets.QAction(MainWindow)
        self.actionBulletin_de_note_d_un_tudiant_par_semestre.setObjectName("actionBulletin_de_note_d_un_tudiant_par_semestre")
        self.actionEtudiants_admis_d_une_section_donn_e = QtWidgets.QAction(MainWindow)
        self.actionEtudiants_admis_d_une_section_donn_e.setObjectName("actionEtudiants_admis_d_une_section_donn_e")
        self.actionEtudiants_redoublants_d_une_section_donn_e = QtWidgets.QAction(MainWindow)
        self.actionEtudiants_redoublants_d_une_section_donn_e.setObjectName("actionEtudiants_redoublants_d_une_section_donn_e")
        self.actionEtudiants_admis_de_L_ISIMM = QtWidgets.QAction(MainWindow)
        self.actionEtudiants_admis_de_L_ISIMM.setObjectName("actionEtudiants_admis_de_L_ISIMM")
        self.actionEtudiants_redoublants_de_L_ISIMM = QtWidgets.QAction(MainWindow)
        self.actionEtudiants_redoublants_de_L_ISIMM.setObjectName("actionEtudiants_redoublants_de_L_ISIMM")
        self.actionMoyennes_des_tudiants_d_une_section_donn_e = QtWidgets.QAction(MainWindow)
        self.actionMoyennes_des_tudiants_d_une_section_donn_e.setObjectName("actionMoyennes_des_tudiants_d_une_section_donn_e")
        self.actionEnregistrement_fichier_ETUDIANTS = QtWidgets.QAction(MainWindow)
        self.actionEnregistrement_fichier_ETUDIANTS.setObjectName("actionEnregistrement_fichier_ETUDIANTS")
        self.actionR_cup_ration_fichier_ETUDIANTS = QtWidgets.QAction(MainWindow)
        self.actionR_cup_ration_fichier_ETUDIANTS.setObjectName("actionR_cup_ration_fichier_ETUDIANTS")
        self.actionEnregistrement_fichier_MATIERES = QtWidgets.QAction(MainWindow)
        self.actionEnregistrement_fichier_MATIERES.setObjectName("actionEnregistrement_fichier_MATIERES")
        self.actionR_cup_ration_fichier_Mati_res = QtWidgets.QAction(MainWindow)
        self.actionR_cup_ration_fichier_Mati_res.setObjectName("actionR_cup_ration_fichier_Mati_res")
        self.actionEnregistrement_fichier_Notes = QtWidgets.QAction(MainWindow)
        self.actionEnregistrement_fichier_Notes.setObjectName("actionEnregistrement_fichier_Notes")
        self.actionR_cup_ration_fichier_NOTES = QtWidgets.QAction(MainWindow)
        self.actionR_cup_ration_fichier_NOTES.setObjectName("actionR_cup_ration_fichier_NOTES")
        
        self.actionEnregistrement_Tout = QtWidgets.QAction(MainWindow)
        self.actionEnregistrement_Tout.setObjectName("actionEnregistrement_Tout")
        self.actionR_cup_ration_Tout = QtWidgets.QAction(MainWindow)
        self.actionR_cup_ration_Tout.setObjectName("actionR_cup_ration_Tout")
        
        self.menuSupprimer_etudiant.addAction(self.actionEtudiant_donne)
        self.menuSupprimer_etudiant.addAction(self.actionD_une_section_donn_e)
        self.menuSupprimer_etudiant.addAction(self.actionD_un_niveau_donn)
        self.menuSupprimer_etudiant.addAction(self.actionD_une_section_et_un_niveau)
        self.menuModifier_etudiant.addAction(self.actionT_l_phone)
        self.menuModifier_etudiant.addAction(self.actionMail)
        self.menuModifier_etudiant.addAction(self.actionAdresse)
        self.menuMise_a_jour_des_etudiants.addAction(self.actionAjouter_etudiant)
        self.menuMise_a_jour_des_etudiants.addAction(self.menuSupprimer_etudiant.menuAction())
        self.menuMise_a_jour_des_etudiants.addAction(self.menuModifier_etudiant.menuAction())
        self.menuRecherche_et_Affichage.addAction(self.actionContenu_du_dictionnaire_tudiants)
        self.menuRecherche_et_Affichage.addAction(self.actionRecherche_par_num_ro)
        self.menuRecherche_et_Affichage.addAction(self.actionRecherche_par_section)
        self.menuRecherche_et_Affichage.addAction(self.actionRecherche_par_section_et_niveau)
        self.menuRecherche_et_Affichage.addAction(self.actionRecherche_par_niveau)
        self.menuGestion_des_etudiants.addAction(self.menuMise_a_jour_des_etudiants.menuAction())
        self.menuGestion_des_etudiants.addAction(self.menuRecherche_et_Affichage.menuAction())
        self.menuModifier_une_mati_re.addAction(self.actionNom)
        self.menuModifier_une_mati_re.addAction(self.actionCoefficient)
        self.menuMise_jour.addAction(self.actionAjouter_mati_re)
        self.menuMise_jour.addAction(self.actionSupprimer_un_mati_re)
        self.menuMise_jour.addAction(self.menuModifier_une_mati_re.menuAction())
        self.menuRecherche_et_Affichage_2.addAction(self.actionContenu_du_dictionnaire_mati_res)
        self.menuRecherche_et_Affichage_2.addAction(self.actionRecherche_par_code)
        self.menuRecherche_et_Affichage_2.addAction(self.actionRecherche_par_section_2)
        self.menuRecherche_et_Affichage_2.addAction(self.actionRecherche_par_section_et_semestre)
        self.menuGestion_des_mati_res.addAction(self.menuMise_jour.menuAction())
        self.menuGestion_des_mati_res.addAction(self.menuRecherche_et_Affichage_2.menuAction())
        self.menuMise_jour_2.addAction(self.actionAjouter_une_note)
        self.menuMise_jour_2.addAction(self.actionSupprimer_une_note)
        self.menuMise_jour_2.addAction(self.actionModifier_une_note)
        self.menuRecherche_et_Affichage_3.addAction(self.actionContenu_du_dictionnaire_notes)
        self.menuRecherche_et_Affichage_3.addAction(self.actionRecherche_par_num_ro_inscription)
        self.menuRecherche_et_Affichage_3.addAction(self.actionRecherche_par_section_et_niveau_2)
        self.menuRecherche_et_Affichage_3.addAction(self.actionRecherche_par_num_ro_inscription_et_semestre)
        self.menuGestion_des_notes.addAction(self.menuMise_jour_2.menuAction())
        self.menuGestion_des_notes.addAction(self.menuRecherche_et_Affichage_3.menuAction())
        self.menuCalcul_et_Affichage.addAction(self.actionBulletin_de_note_d_un_tudiant)
        self.menuCalcul_et_Affichage.addAction(self.actionBulletin_de_note_d_un_tudiant_par_semestre)
        self.menuCalcul_et_Affichage.addAction(self.actionEtudiants_admis_d_une_section_donn_e)
        self.menuCalcul_et_Affichage.addAction(self.actionEtudiants_redoublants_d_une_section_donn_e)
        self.menuCalcul_et_Affichage.addAction(self.actionEtudiants_admis_de_L_ISIMM)
        self.menuCalcul_et_Affichage.addAction(self.actionEtudiants_redoublants_de_L_ISIMM)
        self.menuCalcul_et_Affichage.addAction(self.actionMoyennes_des_tudiants_d_une_section_donn_e)
        self.menuEnregisrement_et_R_cup_ration_des_fichiers.addAction(self.actionEnregistrement_fichier_ETUDIANTS)
        self.menuEnregisrement_et_R_cup_ration_des_fichiers.addAction(self.actionR_cup_ration_fichier_ETUDIANTS)
        self.menuEnregisrement_et_R_cup_ration_des_fichiers.addAction(self.actionEnregistrement_fichier_MATIERES)
        self.menuEnregisrement_et_R_cup_ration_des_fichiers.addAction(self.actionR_cup_ration_fichier_Mati_res)
        self.menuEnregisrement_et_R_cup_ration_des_fichiers.addAction(self.actionEnregistrement_fichier_Notes)
        self.menuEnregisrement_et_R_cup_ration_des_fichiers.addAction(self.actionR_cup_ration_fichier_NOTES)
        self.menuEnregisrement_et_R_cup_ration_des_fichiers.addAction(self.actionEnregistrement_Tout)
        self.menuEnregisrement_et_R_cup_ration_des_fichiers.addAction(self.actionR_cup_ration_Tout)
        
        self.menubar.addAction(self.menuGestion_des_etudiants.menuAction())
        self.menubar.addAction(self.menuGestion_des_mati_res.menuAction())
        self.menubar.addAction(self.menuGestion_des_notes.menuAction())
        self.menubar.addAction(self.menuCalcul_et_Affichage.menuAction())
        self.menubar.addAction(self.menuEnregisrement_et_R_cup_ration_des_fichiers.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)



        self.actionAjouter_etudiant.triggered.connect(self.ajouteEtudiant)
        self.actionEtudiant_donne.triggered.connect(self.supprimIns)
        self.actionD_une_section_donn_e.triggered.connect(self.supprimSec)
        self.actionD_un_niveau_donn.triggered.connect(self.supprimNiv)
        self.actionD_une_section_et_un_niveau.triggered.connect(self.supprimSecNiv)
        self.actionT_l_phone.triggered.connect(self.modifTel)
        self.actionMail.triggered.connect(self.modifMail)
        self.actionAdresse.triggered.connect(self.modifAdr)
        self.actionContenu_du_dictionnaire_tudiants.triggered.connect(self.affEtudiant)
        self.actionRecherche_par_num_ro.triggered.connect(self.rechIns)
        self.actionRecherche_par_section.triggered.connect(self.rechSec)
        self.actionRecherche_par_section_et_niveau.triggered.connect(self.rechSecNiv)
        self.actionRecherche_par_niveau.triggered.connect(self.rechNiv)
        self.actionEnregistrement_fichier_ETUDIANTS.triggered.connect(self.enregistrerEtudiant)
        self.actionR_cup_ration_fichier_ETUDIANTS.triggered.connect(self.recupererEtudiant)
        self.actionAjouter_mati_re.triggered.connect(self.ajouteMatiere)
        self.actionSupprimer_un_mati_re.triggered.connect(self.supprMatiere)
        self.actionNom.triggered.connect(self.modifNom)
        self.actionCoefficient.triggered.connect(self.modifCoef)
        self.actionContenu_du_dictionnaire_mati_res.triggered.connect(self.affMatiere)
        self.actionRecherche_par_code.triggered.connect(self.rechCode)
        self.actionRecherche_par_section_2.triggered.connect(self.rechSecMat)
        self.actionRecherche_par_section_et_semestre.triggered.connect(self.rechSecSem)
        self.actionEnregistrement_fichier_MATIERES.triggered.connect(self.enregistrerMatiere)
        self.actionR_cup_ration_fichier_Mati_res.triggered.connect(self.recupererMatiere)
        self.actionAjouter_une_note.triggered.connect(self.ajoutNote)
        self.actionSupprimer_une_note.triggered.connect(self.suppNote)
        self.actionModifier_une_note.triggered.connect(self.mdfNote)
        self.actionContenu_du_dictionnaire_notes.triggered.connect(self.affNote)
        self.actionRecherche_par_num_ro_inscription.triggered.connect(self.rechInsNote)
        self.actionRecherche_par_section_et_niveau_2.triggered.connect(self.rechSecNivNote)
        self.actionRecherche_par_num_ro_inscription_et_semestre.triggered.connect(self.rechInsSem)
        self.actionEnregistrement_fichier_Notes.triggered.connect(self.enregistrerNote)
        self.actionR_cup_ration_fichier_NOTES.triggered.connect(self.recupererNote)
        self.actionEnregistrement_Tout.triggered.connect(self.enregistrerTout)
        self.actionR_cup_ration_Tout.triggered.connect(self.recupererTout)
        self.actionBulletin_de_note_d_un_tudiant.triggered.connect(self.affBul)
        self.actionBulletin_de_note_d_un_tudiant_par_semestre.triggered.connect(self.affBulSem)
        self.actionEtudiants_admis_d_une_section_donn_e.triggered.connect(self.admSec)
        self.actionEtudiants_redoublants_d_une_section_donn_e.triggered.connect(self.redSec)
        self.actionEtudiants_admis_de_L_ISIMM.triggered.connect(self.admIsimm)
        self.actionEtudiants_redoublants_de_L_ISIMM.triggered.connect(self.redIsimm)
        self.actionMoyennes_des_tudiants_d_une_section_donn_e.triggered.connect(self.moySec)
        

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.menuGestion_des_etudiants.setTitle(_translate("MainWindow", "Gestion des etudiants"))
        self.menuMise_a_jour_des_etudiants.setTitle(_translate("MainWindow", "Mise à jour"))
        self.menuSupprimer_etudiant.setTitle(_translate("MainWindow", "Supprimer etudiant"))
        self.menuModifier_etudiant.setTitle(_translate("MainWindow", "Modifier etudiant"))
        self.menuRecherche_et_Affichage.setTitle(_translate("MainWindow", "Recherche et Affichage"))
        self.menuGestion_des_mati_res.setTitle(_translate("MainWindow", "Gestion des matières"))
        self.menuMise_jour.setTitle(_translate("MainWindow", "Mise à jour"))
        self.menuModifier_une_mati_re.setTitle(_translate("MainWindow", "Modifier une matière"))
        self.menuRecherche_et_Affichage_2.setTitle(_translate("MainWindow", "Recherche et Affichage"))
        self.menuGestion_des_notes.setTitle(_translate("MainWindow", "Gestion des notes"))
        self.menuMise_jour_2.setTitle(_translate("MainWindow", "Mise à jour"))
        self.menuRecherche_et_Affichage_3.setTitle(_translate("MainWindow", "Recherche et Affichage"))
        self.menuCalcul_et_Affichage.setTitle(_translate("MainWindow", "Calcul et Affichage"))
        self.menuEnregisrement_et_R_cup_ration_des_fichiers.setTitle(_translate("MainWindow", "Enregisrement et Récupération"))
        self.actionAjouter_etudiant.setText(_translate("MainWindow", "Ajouter etudiant"))
        self.actionEtudiant_donne.setText(_translate("MainWindow", "Etudiant donné"))
        self.actionD_une_section_donn_e.setText(_translate("MainWindow", "D\'une section donnée"))
        self.actionD_un_niveau_donn.setText(_translate("MainWindow", "D\'un niveau donné"))
        self.actionD_une_section_et_un_niveau.setText(_translate("MainWindow", "D\'une section et un niveau"))
        self.actionT_l_phone.setText(_translate("MainWindow", "Téléphone"))
        self.actionMail.setText(_translate("MainWindow", "Mail"))
        self.actionAdresse.setText(_translate("MainWindow", "Adresse"))
        self.actionContenu_du_dictionnaire_tudiants.setText(_translate("MainWindow", "Contenu du dictionnaire étudiants"))
        self.actionRecherche_par_num_ro.setText(_translate("MainWindow", "Recherche par numéro inscription"))
        self.actionRecherche_par_section.setText(_translate("MainWindow", "Recherche par section"))
        self.actionRecherche_par_section_et_niveau.setText(_translate("MainWindow", "Recherche par section et niveau"))
        self.actionRecherche_par_niveau.setText(_translate("MainWindow", "Recherche par niveau"))
        self.actionAjouter_mati_re.setText(_translate("MainWindow", "Ajouter une matière"))
        self.actionSupprimer_un_mati_re.setText(_translate("MainWindow", "Supprimer un matière"))
        self.actionNom.setText(_translate("MainWindow", "Nom"))
        self.actionCoefficient.setText(_translate("MainWindow", "Coefficient"))
        self.actionContenu_du_dictionnaire_mati_res.setText(_translate("MainWindow", "Contenu du dictionnaire matières"))
        self.actionRecherche_par_code.setText(_translate("MainWindow", "Recherche par code"))
        self.actionRecherche_par_section_2.setText(_translate("MainWindow", "Recherche par section"))
        self.actionRecherche_par_section_et_semestre.setText(_translate("MainWindow", "Recherche par section et semestre"))
        self.actionAjouter_une_note.setText(_translate("MainWindow", "Ajouter une note"))
        self.actionSupprimer_une_note.setText(_translate("MainWindow", "Supprimer une note"))
        self.actionModifier_une_note.setText(_translate("MainWindow", "Modifier une note"))
        self.actionContenu_du_dictionnaire_notes.setText(_translate("MainWindow", "Contenu du dictionnaire notes"))
        self.actionRecherche_par_num_ro_inscription.setText(_translate("MainWindow", "Recherche par numéro inscription"))
        self.actionRecherche_par_section_et_niveau_2.setText(_translate("MainWindow", "Recherche par section et niveau"))
        self.actionRecherche_par_num_ro_inscription_et_semestre.setText(_translate("MainWindow", "Recherche par numéro inscription et semestre"))
        self.actionBulletin_de_note_d_un_tudiant.setText(_translate("MainWindow", "Bulletin de note d\'un étudiant"))
        self.actionBulletin_de_note_d_un_tudiant_par_semestre.setText(_translate("MainWindow", "Bulletin de note d\'un étudiant par semestre"))
        self.actionEtudiants_admis_d_une_section_donn_e.setText(_translate("MainWindow", "Etudiants admis d\'une section donnée"))
        self.actionEtudiants_redoublants_d_une_section_donn_e.setText(_translate("MainWindow", "Etudiants redoublants d\'une section donnée"))
        self.actionEtudiants_admis_de_L_ISIMM.setText(_translate("MainWindow", "Etudiants admis de L\'ISIMM"))
        self.actionEtudiants_redoublants_de_L_ISIMM.setText(_translate("MainWindow", "Etudiants redoublants de L\'ISIMM"))
        self.actionMoyennes_des_tudiants_d_une_section_donn_e.setText(_translate("MainWindow", "Moyennes des étudiants d\'une section donnée"))
        self.actionEnregistrement_fichier_ETUDIANTS.setText(_translate("MainWindow", "Enregistrement fichier ETUDIANTS"))
        self.actionR_cup_ration_fichier_ETUDIANTS.setText(_translate("MainWindow", "Récupération fichier ETUDIANTS"))
        self.actionEnregistrement_fichier_MATIERES.setText(_translate("MainWindow", "Enregistrement fichier MATIERES"))
        self.actionR_cup_ration_fichier_Mati_res.setText(_translate("MainWindow", "Récupération fichier MATIERES"))
        self.actionEnregistrement_fichier_Notes.setText(_translate("MainWindow", "Enregistrement fichier NOTES"))
        self.actionR_cup_ration_fichier_NOTES.setText(_translate("MainWindow", "Récupération fichier NOTES"))
        self.actionEnregistrement_Tout.setText(_translate("MainWindow", "Enregistrement des fichiers "))
        self.actionR_cup_ration_Tout.setText(_translate("MainWindow", "Récupération des fichiers "))

